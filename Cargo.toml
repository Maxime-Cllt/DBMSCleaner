[package]
name = "DBMSCleaner"
version = "1.0.3"
edition = "2024"
repository = "https://github.com/Maxime-Cllt/DBMSCleaner.git"
description = "A simple tool to clean your DMBS in Rust"
categories = ["command-line-interface", "database"]
keywords = ["database", "cleaner", "cli", "rust"]
license = "GPL-3.0"
authors = ["Maxime-Cllt"]


[dependencies]
serde = { version = "^1.0.225", features = ["derive"] }
serde_json = "^1.0.145"
sqlx = { version = "^0.8.6", features = ["mysql", "postgres", "runtime-tokio-native-tls"] }
tokio = { version = "^1.47.1", features = ["macros", "rt-multi-thread", "sync"] }
num-format = "^0.4.4"
async-trait = "^0.1.89"
chrono = "^0.4.42"

[lib]
name = "libcleaner"
path = "src/lib.rs"
crate-type = ["cdylib", "rlib"]

[dev-dependencies]

[profile.dev]
# Development profile for debug builds
opt-level = 0  # No optimizations, better debugging info
debug = true  # Generate debug info
overflow-checks = true  # Enable overflow checks for safer code
lto = false  # Disable Link Time Optimization for faster compilation
panic = "unwind" # Use unwind strategy to get better backtraces

[profile.test]
# Test profile for optimized builds
incremental = true  # Enable incremental compilation for faster test builds
opt-level = 1  # Optimize for speed, but not as much as release
debug = false  # No debug info in test builds
overflow-checks = true  # Enable overflow checks for safer code
lto = false  # Disable Link Time Optimization for faster compilation

[profile.release]
# Release profile for optimized builds
incremental = false
opt-level = 3  # Optimize for speed
debug = false  # No debug info in release builds
lto = "fat"    # Better than just `true` for performance
codegen-units = 1  # Merge codegen units for better optimization (can increase compile time)
overflow-checks = false  # Disable overflow checks for performance
panic = "abort" # Use unwind strategy to get better backtraces.
strip = "symbols"     # Strip debug symbols to reduce binary size